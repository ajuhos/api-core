{"version":3,"file":"ApiEdgeAction.js","sourceRoot":"","sources":["../../../src/edge/ApiEdgeAction.ts"],"names":[],"mappings":";AAEA,iCAA+B,oBAAoB,CAAC,CAAA;AAEpD,WAAY,oBAAoB;IAE5B,iEAAc,CAAA;IACd,mEAAe,CAAA;IACf,uEAAiB,CAAA;IAEjB,8DAA+B,CAAA;AAEnC,CAAC,EARW,4BAAoB,KAApB,4BAAoB,QAQ/B;AARD,IAAY,oBAAoB,GAApB,4BAQX,CAAA;AAED,WAAY,wBAAwB;IAEhC,qFAAW,CAAA;IACX,mFAAU,CAAA;AAEd,CAAC,EALW,gCAAwB,KAAxB,gCAAwB,QAKnC;AALD,IAAY,wBAAwB,GAAxB,gCAKX,CAAA;AAED;IAUI,uBAAY,IAAY,EACZ,OAAgE,EAChE,WAAoD,EACpD,WAA4E,EAC5E,QAAyD,EACzD,YAA2B;QAf3C,iBA2BC;QAfe,2BAAoD,GAApD,cAAgC,mCAAgB,CAAC,GAAG;QACpD,2BAA4E,GAA5E,cAAwC,wBAAwB,CAAC,WAAW;QAC5E,wBAAyD,GAAzD,WAAiC,oBAAoB,CAAC,GAAG;QACzD,4BAA2B,GAA3B,iBAA2B;QAZvC,gBAAW,GAA6B,wBAAwB,CAAC,WAAW,CAAC;QAC7E,gBAAW,GAAqB,mCAAgB,CAAC,GAAG,CAAC;QACrD,aAAQ,GAAyB,oBAAoB,CAAC,GAAG,CAAC;QAC1D,iBAAY,GAAa,EAAE,CAAC;QAkB5B,YAAO,GAAG;YACN,MAAM,CAAC,YAAU,KAAI,CAAC,IAAI,MAAG,CAAA;QACjC,CAAC,CAAA;QAVG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACrC,CAAC;IAKL,oBAAC;AAAD,CAAC,AA3BD,IA2BC;AA3BY,qBAAa,gBA2BzB,CAAA","sourcesContent":["import {QueryStep, ApiQueryScope} from \"../query/ApiQuery\";\nimport {ApiEdgeQueryResponse} from \"./ApiEdgeQueryResponse\";\nimport {ApiEdgeQueryType} from \"./ApiEdgeQueryType\";\n\nexport enum ApiEdgeActionTrigger {\n\n    Query = 1 << 1,\n    Method = 1 << 2,\n    Relation = 1 << 3,\n\n    Any = Query | Method | Relation\n\n}\n\nexport enum ApiEdgeActionTriggerKind {\n\n    BeforeEvent,\n    AfterEvent\n\n}\n\nexport class ApiEdgeAction implements QueryStep {\n    name: string;\n\n    triggerKind: ApiEdgeActionTriggerKind = ApiEdgeActionTriggerKind.BeforeEvent;\n    targetTypes: ApiEdgeQueryType = ApiEdgeQueryType.Any;\n    triggers: ApiEdgeActionTrigger = ApiEdgeActionTrigger.Any;\n    triggerNames: string[] = [];\n\n    execute: (scope: ApiQueryScope) => Promise<ApiQueryScope>;\n\n    constructor(name: string,\n                execute: (scope: ApiQueryScope) => Promise<ApiEdgeQueryResponse>,\n                targetTypes: ApiEdgeQueryType = ApiEdgeQueryType.Any,\n                triggerKind: ApiEdgeActionTriggerKind = ApiEdgeActionTriggerKind.BeforeEvent,\n                triggers: ApiEdgeActionTrigger = ApiEdgeActionTrigger.Any,\n                triggerNames: string[] = []) {\n        this.name = name;\n        this.triggers = triggers;\n        this.execute = execute;\n        this.targetTypes = targetTypes;\n        this.triggerKind = triggerKind;\n        this.triggerNames = triggerNames;\n    }\n\n    inspect = () => {\n        return `action{${this.name}}`\n    }\n}"]}