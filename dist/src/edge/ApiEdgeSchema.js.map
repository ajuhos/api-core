{"version":3,"file":"ApiEdgeSchema.js","sourceRoot":"","sources":["../../../src/edge/ApiEdgeSchema.ts"],"names":[],"mappings":";AAAA,IAAM,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC,EAC9B,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAOpC;IAUI,uBAAY,MAAW;QACnB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,KAAa;YACjD,IAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;YACjC,MAAM,CAAC;gBACH,KAAK,EAAE,WAAW;gBAClB,KAAK,EAAE,aAAa,CAAC,iBAAiB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aAC9D,CAAA;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAfc,+BAAiB,GAAhC,UAAiC,SAA0B;QACvD,EAAE,CAAA,CAAC,OAAO,SAAS,KAAK,UAAU,CAAC;YAAC,MAAM,CAAC,SAAS,CAAC;QACrD,IAAI,CAAC,EAAE,CAAA,CAAC,SAAS,KAAK,GAAG,CAAC;YAAC,MAAM,CAAC,UAAC,CAAM,IAAK,OAAA,CAAC,EAAD,CAAC,CAAC;QAChD,IAAI;YAAC,MAAM,yBAAyB,CAAC;IACzC,CAAC;IAYL,oBAAC;AAAD,CAAC,AApBD,IAoBC;AApBY,qBAAa,gBAoBzB,CAAA","sourcesContent":["const parse = require('obj-parse'),\n    deepKeys = require('deep-keys');\n\nexport interface ApiEdgeSchemaTransformation {\n    value: any;\n    apply: Function;\n}\n\nexport class ApiEdgeSchema {\n    fields: string[];\n    transformations: ApiEdgeSchemaTransformation[];\n\n    private static createTransformer(transform: string|Function) {\n        if(typeof transform === \"function\") return transform;\n        else if(transform === \"=\") return (a: any) => a;\n        else throw \"Not Supported Transform\"; //TODO\n    }\n\n    constructor(schema: any) {\n        this.fields = deepKeys(schema);\n        this.transformations = this.fields.map((field: string) => {\n            const parsedField = parse(field);\n            return {\n                value: parsedField,\n                apply: ApiEdgeSchema.createTransformer(parsedField(schema))\n            }\n        });\n    }\n}"]}