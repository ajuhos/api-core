{"version":3,"file":"ApiEdgeActionCollection.js","sourceRoot":"","sources":["../../../src/edge/ApiEdgeActionCollection.ts"],"names":[],"mappings":"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","sourcesContent":["import {ApiEdgeAction, ApiEdgeActionTriggerKind, ApiEdgeActionTrigger} from \"./ApiEdgeAction\";\nimport {ApiQuery} from \"../query/ApiQuery\";\nimport {ApiEdgeQuery} from \"./ApiEdgeQuery\";\nimport {ApiEdgeRelation} from \"../relations/ApiEdgeRelation\";\n\nexport class ApiEdgeActionCollection {\n\n    private beforeMethodActions: ApiEdgeAction[] = [];\n    private beforeSubQueryActions: ApiEdgeAction[] = [];\n    private beforeOutputActions: ApiEdgeAction[] = [];\n    private beforeRelationActions: ApiEdgeAction[] = [];\n\n    private afterMethodActions: ApiEdgeAction[] = [];\n    private afterSubQueryActions: ApiEdgeAction[] = [];\n    private afterOutputActions: ApiEdgeAction[] = [];\n    private afterRelationActions: ApiEdgeAction[] = [];\n\n    add(action: ApiEdgeAction) {\n        if(action.triggerKind == ApiEdgeActionTriggerKind.BeforeEvent) {\n            if(action.triggers & ApiEdgeActionTrigger.SubQuery) {\n                this.beforeSubQueryActions.push(action);\n            }\n\n            if(action.triggers & ApiEdgeActionTrigger.Method) {\n                this.beforeMethodActions.push(action);\n            }\n\n            if(action.triggers & ApiEdgeActionTrigger.OutputQuery) {\n                this.beforeOutputActions.push(action);\n            }\n\n            if(action.triggers & ApiEdgeActionTrigger.Relation) {\n                this.beforeRelationActions.push(action);\n            }\n        }   \n        else {\n            if(action.triggers & ApiEdgeActionTrigger.SubQuery) {\n                this.afterSubQueryActions.push(action);\n            }\n\n            if(action.triggers & ApiEdgeActionTrigger.Method) {\n                this.afterMethodActions.push(action);\n            }\n\n            if(action.triggers & ApiEdgeActionTrigger.OutputQuery) {\n                this.afterOutputActions.push(action);\n            }\n\n            if(action.triggers & ApiEdgeActionTrigger.Relation) {\n                this.afterRelationActions.push(action);\n            } \n        }\n    }\n    \n    getFor(triggerKind: ApiEdgeActionTriggerKind,\n           query: ApiQuery,\n           edgeQuery: ApiEdgeQuery,\n           relation: ApiEdgeRelation|null,\n           output: boolean = false) {\n        \n        const edge = edgeQuery.edge,\n            queryType = edgeQuery.type,\n            trigger = relation ?\n                ApiEdgeActionTrigger.Relation :\n                (output ? ApiEdgeActionTrigger.OutputQuery : ApiEdgeActionTrigger.SubQuery);\n\n        if(relation) {\n            \n        }\n        \n        \n        let actions: ApiEdgeAction[];\n        if(relation) {\n            actions = edge.actions.filter((action: ApiEdgeAction) =>\n            action.triggerKind == triggerKind &&\n            (action.targetTypes & queryType) &&\n            (action.triggers & trigger) &&\n            (!action.triggerNames.length || action.triggerNames.indexOf(relation.name) == -1))\n        }\n        else {\n            actions = edge.actions.filter((action: ApiEdgeAction) =>\n            action.triggerKind == triggerKind &&\n            (action.targetTypes & queryType) &&\n            (action.triggers & trigger))\n        }\n\n        actions.forEach((action: ApiEdgeAction) => query.unshift(action))\n    }\n\n}"]}