{"version":3,"file":"ApiEdgeMethod.js","sourceRoot":"","sources":["../../../src/edge/ApiEdgeMethod.ts"],"names":[],"mappings":";AACA,2BAA6B,uBAAuB,CAAC,CAAA;AAGrD,WAAY,kBAAkB;IAK1B,2DAAI,CAAA;IAKJ,6DAAK,CAAA;IAKL,uEAAU,CAAA;AAEd,CAAC,EAjBW,0BAAkB,KAAlB,0BAAkB,QAiB7B;AAjBD,IAAY,kBAAkB,GAAlB,0BAiBX,CAAA;AAED;IAOI,uBAAY,IAAY,EACZ,OAAgE,EAChE,KAAmD,EACnD,aAAkD,EAClD,YAAmB;QAFnB,qBAAmD,GAAnD,QAA4B,kBAAkB,CAAC,IAAI;QACnD,6BAAkD,GAAlD,gBAAgC,2BAAc,CAAC,GAAG;QAClD,4BAAmB,GAAnB,mBAAmB;QAR/B,kBAAa,GAAmB,2BAAc,CAAC,GAAG,CAAC;QACnD,UAAK,GAAuB,kBAAkB,CAAC,IAAI,CAAC;QAQhD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACrC,CAAC;IACL,oBAAC;AAAD,CAAC,AAlBD,IAkBC;AAlBY,qBAAa,gBAkBzB,CAAA","sourcesContent":["import {QueryStep, ApiQueryScope} from \"../query/ApiQuery\";\nimport {ApiRequestType} from \"../request/ApiRequest\";\nimport {ApiEdgeQueryResponse} from \"./ApiEdgeQueryResponse\";\n\nexport enum ApiEdgeMethodScope {\n\n    /**\n     * Available for both entries and collections.\n     */\n    Edge,\n\n    /**\n     * Available for single entries.\n     */\n    Entry,\n\n    /**\n     * Available for collections.\n     */\n    Collection\n\n}\n\nexport class ApiEdgeMethod {\n    name: string;\n    requiresData: boolean;\n    acceptedTypes: ApiRequestType = ApiRequestType.Any;\n    scope: ApiEdgeMethodScope = ApiEdgeMethodScope.Edge;\n    execute: (scope: ApiQueryScope) => Promise<ApiEdgeQueryResponse>;\n\n    constructor(name: string,\n                execute: (scope: ApiQueryScope) => Promise<ApiEdgeQueryResponse>,\n                scope: ApiEdgeMethodScope = ApiEdgeMethodScope.Edge,\n                acceptedTypes: ApiRequestType = ApiRequestType.Any,\n                requiresData = true) {\n        this.name = name;\n        this.scope = scope;\n        this.execute = execute;\n        this.acceptedTypes = acceptedTypes;\n        this.requiresData = requiresData;\n    }\n}"]}