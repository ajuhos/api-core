{"version":3,"file":"ApiEdgeDefinition.js","sourceRoot":"","sources":["../../../src/edge/ApiEdgeDefinition.ts"],"names":[],"mappings":"","sourcesContent":["import {ApiEdgeRelation} from \"../relations/ApiEdgeRelation\";\nimport {ApiEdgeQueryContext} from \"./ApiEdgeQueryContext\";\nimport {ApiEdgeQueryResponse} from \"./ApiEdgeQueryResponse\";\n\nexport interface ApiEdgeDefinition {\n\n    name: string;\n    pluralName: string;\n\n    methods: Object;\n    relations: ApiEdgeRelation[];\n\n    getEntry: (context: ApiEdgeQueryContext) => Promise<ApiEdgeQueryResponse>;\n    listEntries: (context: ApiEdgeQueryContext) => Promise<ApiEdgeQueryResponse>;\n    createEntry: (context: ApiEdgeQueryContext, entryFields: any) => Promise<ApiEdgeQueryResponse>;\n    updateEntry: (context: ApiEdgeQueryContext, entryFields: any) => Promise<ApiEdgeQueryResponse>;\n    updateEntries: (context: ApiEdgeQueryContext, entryFields: any) => Promise<ApiEdgeQueryResponse>;\n    removeEntry: (context: ApiEdgeQueryContext, entryFields: any) => Promise<ApiEdgeQueryResponse>;\n    removeEntries: (context: ApiEdgeQueryContext) => Promise<ApiEdgeQueryResponse[]>;\n    exists: (context: ApiEdgeQueryContext) => Promise<ApiEdgeQueryResponse>;\n    callMethod: (context: ApiEdgeQueryContext, entryFields: any) => Promise<ApiEdgeQueryResponse>;\n\n}"]}