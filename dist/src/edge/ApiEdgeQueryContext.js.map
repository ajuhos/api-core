{"version":3,"file":"ApiEdgeQueryContext.js","sourceRoot":"","sources":["../../../src/edge/ApiEdgeQueryContext.ts"],"names":[],"mappings":";AAAA,mCAAyD,sBAAsB,CAAC,CAAA;AAGhF;IA8BI,6BAAY,EAAsB,EAAE,MAAqB;QA9B7D,iBA6DC;QA/Be,kBAAsB,GAAtB,SAAsB;QAAE,sBAAqB,GAArB,WAAqB;QA5BzD,WAAM,GAAa,EAAE,CAAC;QACtB,uBAAkB,GAAuB,EAAE,CAAC;QAK5C,WAAM,GAAU,EAAE,CAAC;QACnB,YAAO,GAAyB,EAAE,CAAC;QAEnC,UAAK,GAAG;YACJ,IAAI,IAAI,GAAG,IAAI,mBAAmB,EAAE,CAAC;YACrC,IAAI,CAAC,EAAE,GAAG,KAAI,CAAC,EAAE,CAAC;YAElB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAnB,CAAmB,CAAC,CAAC;YAC9C,KAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,EAA/B,CAA+B,CAAC,CAAC;YACtE,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,EAA5B,CAA4B,CAAC,CAAC;YACxD,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAA9B,CAA8B,CAAC,CAAC;YAEzD,EAAE,CAAA,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,UAAU,GAAG;oBACd,IAAI,EAAE,KAAI,CAAC,UAAU,CAAC,IAAI;oBAC1B,KAAK,EAAE,KAAI,CAAC,UAAU,CAAC,KAAK;iBAC/B,CAAA;YACL,CAAC;YAED,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC,CAAC;QAOF,aAAQ,GAAG,UAAC,IAAY,EAAE,KAAa;YACnC,KAAI,CAAC,UAAU,GAAG;gBACd,UAAI,EAAE,YAAK;aACd,CAAC;YACF,MAAM,CAAC,KAAI,CAAA;QACf,CAAC,CAAC;QAEF,SAAI,GAAG,UAAC,SAAiB,EAAE,SAAyB;YAAzB,yBAAyB,GAAzB,gBAAyB;YAChD,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC,KAAI,CAAA;QACf,CAAC,CAAC;QAdE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAcD,sCAAQ,GAAR,UAAS,QAA0B;QAC/B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,MAAM,CAAC,IAAI,CAAA;IACf,CAAC;IAED,mCAAK,GAAL,UAAM,KAAa;QACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,MAAM,CAAC,IAAI,CAAA;IACf,CAAC;IAED,oCAAM,GAAN,UAAO,KAAa,EAAE,IAA4B,EAAE,KAAU;QAC1D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,uCAAkB,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,IAAI,CAAA;IACf,CAAC;IACL,0BAAC;AAAD,CAAC,AA7DD,IA6DC;AA7DY,2BAAmB,sBA6D/B,CAAA","sourcesContent":["import {ApiEdgeQueryFilter, ApiEdgeQueryFilterType} from \"./ApiEdgeQueryFilter\";\nimport {OneToOneRelation} from \"../relations/OneToOneRelation\";\n\nexport class ApiEdgeQueryContext {\n    id: string|null;\n    fields: string[] = [];\n    populatedRelations: OneToOneRelation[] = [];\n    pagination: {\n        skip: number,\n        limit: number\n    };\n    sortBy: any[] = [];\n    filters: ApiEdgeQueryFilter[] = [];\n\n    clone = () => {\n        let temp = new ApiEdgeQueryContext();\n        temp.id = this.id;\n\n        this.fields.forEach(f => temp.fields.push(f));\n        this.populatedRelations.forEach(f => temp.populatedRelations.push(f));\n        this.filters.forEach(f => temp.filters.push(f.clone()));\n        this.sortBy.forEach(f => temp.sortBy.push([f[0], f[1]]));\n\n        if(this.pagination) {\n            temp.pagination = {\n                skip: this.pagination.skip,\n                limit: this.pagination.limit\n            }\n        }\n\n        return temp;\n    };\n\n    constructor(id: string|null = null, fields: string[] = []) {\n        this.id = id;\n        this.fields = fields;\n    }\n\n    paginate = (skip: number, limit: number) => {\n        this.pagination = {\n            skip, limit\n        };\n        return this\n    };\n\n    sort = (fieldName: string, ascending: boolean = true) => {\n        this.sortBy.push([fieldName, (ascending ? 1 : -1)]);\n        return this\n    };\n\n    populate(relation: OneToOneRelation) {\n        this.populatedRelations.push(relation);\n        return this\n    }\n\n    field(field: string) {\n        this.fields.push(field);\n        return this\n    }\n\n    filter(field: string, type: ApiEdgeQueryFilterType, value: any) {\n        this.filters.push(new ApiEdgeQueryFilter(field, type, value));\n        return this\n    }\n}"]}