{"version":3,"file":"ApiEdgeQueryType.js","sourceRoot":"","sources":["../../../src/edge/ApiEdgeQueryType.ts"],"names":[],"mappings":";AAGA,WAAY,gBAAgB;IAKxB,uDAAa,CAAA;IAKb,qDAAY,CAAA;IAKZ,2DAAe,CAAA;IAKf,4DAAe,CAAA;IAKf,0DAAc,CAAA;IAKd,4DAAe,CAAA;IAKf,6DAAe,CAAA;IAEf,uDAA4D,CAAA;IAC5D,4DAAuB,CAAA;IACvB,yDAAmB,CAAA;IACnB,yEAA4B,CAAA;AAChC,CAAC,EAzCW,wBAAgB,KAAhB,wBAAgB,QAyC3B;AAzCD,IAAY,gBAAgB,GAAhB,wBAyCX,CAAA","sourcesContent":["/**\n * Possible types for API Edge Queries.\n */\nexport enum ApiEdgeQueryType {\n\n    /**\n     * List several entities of the source model.\n     */\n    List = 1 << 1,\n\n    /**\n     * Get an entity of the source model.\n     */\n    Get = 1 << 2,\n\n    /**\n     * Create a new entity in the source model.\n     */\n    Create = 1 << 3,\n\n    /**\n     * Edit an entity in the source model.\n     */\n    Update = 1 << 4,\n\n    /**\n     * Edit an entity in the source model.\n     */\n    Patch = 1 << 5,\n\n    /**\n     * Delete an entity from the source model.\n     */\n    Delete = 1 << 6,\n\n    /**\n     * Check whether an entity from the source model exists.\n     */\n    Exists = 1 << 7,\n\n    Any = List | Get | Create | Update | Patch | Delete | Exists,\n    Change = Update | Patch,\n    Read = Get | Exists,\n    ReadOrChange = Read | Change\n}"]}