{"version":3,"file":"related-change-queries.js","sourceRoot":"","sources":["../../test/related-change-queries.ts"],"names":[],"mappings":";AAAA,IAAM,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AAE3B,oBAAkB,YAAY,CAAC,CAAA;AAC/B,IAAY,OAAO,WAAM,8BAA8B,CAAC,CAAA;AACxD,iCAA+B,mCAAmC,CAAC,CAAA;AACnE,kCAAgC,oCAAoC,CAAC,CAAA;AAErE,4BAA0B,yBAAyB,CAAC,CAAA;AACpD,0BAAwB,uBAAuB,CAAC,CAAA;AAChD,2BAAyB,wBAAwB,CAAC,CAAA;AAClD,+BAA6B,4BAA4B,CAAC,CAAA;AAC1D,2BAAyB,wBAAwB,CAAC,CAAA;AAClD,2BAA6B,2BAA2B,CAAC,CAAA;AAEzD,IAAM,WAAW,GAAG,IAAI,yBAAW,EAC/B,SAAS,GAAG,IAAI,qBAAS,EACzB,UAAU,GAAG,IAAI,uBAAU,EAC3B,cAAc,GAAG,IAAI,+BAAc,EACnC,UAAU,GAAG,IAAI,uBAAU,CAAC;AAEhC,IAAI,GAAQ,CAAC;AAEb,GAAG,CAAC,IAAI,CAAC,8BAA8B,EAAE,UAAC,CAAM;IAC5C,GAAG,GAAG,IAAI,SAAG,CAAC,KAAK,CAAC;SACf,IAAI,CAAC,WAAW,CAAC;SACjB,IAAI,CAAC,SAAS,CAAC;SACf,IAAI,CAAC,UAAU,CAAC;SAChB,IAAI,CAAC,cAAc,CAAC;SACpB,IAAI,CAAC,UAAU,CAAC;SAChB,QAAQ,CAAC,IAAI,mCAAgB,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;SAC1D,QAAQ,CAAC,IAAI,qCAAiB,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;SAC3D,QAAQ,CAAC,IAAI,qCAAiB,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;SACxD,QAAQ,CAAC,IAAI,mCAAgB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;SACtD,QAAQ,CAAC,IAAI,mCAAgB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;SACrD,QAAQ,CAAC,IAAI,mCAAgB,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;SACrD,QAAQ,CAAC,IAAI,qCAAiB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;SACvD,QAAQ,CAAC,IAAI,qCAAiB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;SACtD,QAAQ,CAAC,IAAI,qCAAiB,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;SACxD,QAAQ,CAAC,IAAI,qCAAiB,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC;IAE5D,CAAC,CAAC,GAAG,EAAE,CAAA;AACX,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,2BAA2B,EAAE,UAAC,CAAM;IACzC,IAAM,OAAO,GAAG,GAAG,CAAC,YAAY,CAAC,CAAE,SAAS,EAAE,IAAI,EAAE,UAAU,CAAE,CAAC,CAAC;IAClE,OAAO,CAAC,IAAI,GAAG,2BAAc,CAAC,MAAM,CAAC;IACrC,OAAO,CAAC,IAAI,GAAG;QACX,EAAE,EAAE,IAAI;QACR,QAAQ,EAAE,YAAY;QACtB,KAAK,EAAE,sBAAsB;QAC7B,OAAO,EAAE,IAAI;KAChB,CAAC;IACF,IAAM,KAAK,GAAG,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAEtC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,6BAA6B,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,OAAO,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC;IACrE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,OAAO,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;IACzE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,OAAO,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;IAC7E,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,OAAO,CAAC,qBAAqB,EAAE,wBAAwB,CAAC,CAAC;IACxF,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,OAAO,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;IAE9E,KAAK,CAAC,OAAO,EAAE;SACV,IAAI,CAAC,UAAA,IAAI;QACN,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,EAAE,EAAE,IAAI;YACR,QAAQ,EAAE,YAAY;YACtB,KAAK,EAAE,sBAAsB;YAC7B,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,IAAI;SAChB,CAAC,CAAC;QACH,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC7B,CAAC,CAAC,GAAG,EAAE,CAAA;IACX,CAAC,CAAC;SACD,KAAK,CAAC;QACH,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,+BAA+B,CAAC,CAAC;QAC7C,CAAC,CAAC,GAAG,EAAE,CAAA;IACX,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,sCAAsC,EAAE,UAAC,CAAM;IACpD,IAAM,OAAO,GAAG,GAAG,CAAC,YAAY,CAAC,CAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,CAAE,CAAC,CAAC;IACnF,OAAO,CAAC,IAAI,GAAG,2BAAc,CAAC,MAAM,CAAC;IACrC,OAAO,CAAC,IAAI,GAAG;QACX,EAAE,EAAE,IAAI;QACR,QAAQ,EAAE,WAAW;QACrB,KAAK,EAAE,qBAAqB;KAC/B,CAAC;IACF,IAAM,KAAK,GAAG,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAEtC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,6BAA6B,CAAC,CAAC;IAC9D,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,OAAO,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC;IACrE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,OAAO,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;IACzE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,OAAO,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;IAC7E,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,OAAO,CAAC,qBAAqB,EAAE,wBAAwB,CAAC,CAAC;IACxF,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,OAAO,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;IACzE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,OAAO,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;IAC7E,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,OAAO,CAAC,qBAAqB,EAAE,uBAAuB,CAAC,CAAC;IACvF,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,OAAO,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;IAE9E,KAAK,CAAC,OAAO,EAAE;SACV,IAAI,CAAC,UAAA,IAAI;QACN,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,EAAE,EAAE,IAAI;YACR,QAAQ,EAAE,WAAW;YACrB,KAAK,EAAE,qBAAqB;YAC5B,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,IAAI;SAChB,CAAC,CAAC;QACH,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC7B,CAAC,CAAC,GAAG,EAAE,CAAA;IACX,CAAC,CAAC;SACD,KAAK,CAAC;QACH,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,+BAA+B,CAAC,CAAC;QAC7C,CAAC,CAAC,GAAG,EAAE,CAAA;IACX,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC","sourcesContent":["const tap = require('tap');\n\nimport {Api} from \"../src/Api\";\nimport * as builder from \"../src/query/ApiQueryBuilder\";\nimport {OneToOneRelation} from \"../src/relations/OneToOneRelation\";\nimport {OneToManyRelation} from \"../src/relations/OneToManyRelation\";\n\nimport {StudentEdge} from \"./env/edges/StudentEdge\";\nimport {ClassEdge} from \"./env/edges/ClassEdge\";\nimport {CourseEdge} from \"./env/edges/CourseEdge\";\nimport {CourseTypeEdge} from \"./env/edges/CourseTypeEdge\";\nimport {SchoolEdge} from \"./env/edges/SchoolEdge\";\nimport {ApiRequestType} from \"../src/request/ApiRequest\";\n\nconst studentEdge = new StudentEdge,\n    classEdge = new ClassEdge,\n    courseEdge = new CourseEdge,\n    courseTypeEdge = new CourseTypeEdge,\n    schoolEdge = new SchoolEdge;\n\nlet api: Api;\n\ntap.test('creating the API should work', (t: any) => {\n    api = new Api('1.0')\n        .edge(studentEdge)\n        .edge(classEdge)\n        .edge(courseEdge)\n        .edge(courseTypeEdge)\n        .edge(schoolEdge)\n        .relation(new OneToOneRelation(courseEdge, courseTypeEdge))\n        .relation(new OneToManyRelation(courseTypeEdge, courseEdge))\n        .relation(new OneToManyRelation(studentEdge, courseEdge))\n        .relation(new OneToOneRelation(studentEdge, classEdge))\n        .relation(new OneToOneRelation(classEdge, schoolEdge))\n        .relation(new OneToOneRelation(courseEdge, classEdge))\n        .relation(new OneToManyRelation(classEdge, studentEdge))\n        .relation(new OneToManyRelation(classEdge, courseEdge))\n        .relation(new OneToManyRelation(schoolEdge, studentEdge))\n        .relation(new OneToManyRelation(schoolEdge, classEdge));\n\n    t.end()\n});\n\ntap.test('POST /schools/s2/students', (t: any) => {\n    const request = api.parseRequest([ 'schools', 's2', 'students' ]);\n    request.type = ApiRequestType.Create;\n    request.body = {\n        id: \"s7\",\n        fullName: \"Marry Test\",\n        email: \"marry.test@gmail.com\",\n        classId: \"c1\"\n    };\n    const query = api.buildQuery(request);\n\n    t.equal(query.steps.length, 5, 'should build a 5 step query');\n    t.ok(query.steps[0] instanceof builder.SetBodyQueryStep, 'SET BODY');\n    t.ok(query.steps[1] instanceof builder.ExtendContextQueryStep, 'EXTEND');\n    t.ok(query.steps[2] instanceof builder.QueryEdgeQueryStep, 'QUERY /schools');\n    t.ok(query.steps[3] instanceof builder.RelateChangeQueryStep, 'RELATE CHANGE schoolId');\n    t.ok(query.steps[4] instanceof builder.QueryEdgeQueryStep, 'QUERY /students');\n\n    query.execute()\n        .then(resp => {\n            t.same(resp.data, {\n                id: \"s7\",\n                fullName: \"Marry Test\",\n                email: \"marry.test@gmail.com\",\n                schoolId: \"s2\",\n                classId: \"c1\"\n            });\n            t.equal(resp.metadata, null);\n            t.end()\n        })\n        .catch(() => {\n            t.ok(false, \"a valid query should not fail\");\n            t.end()\n        });\n});\n\ntap.test('POST /schools/s2/classes/c1/students', (t: any) => {\n    const request = api.parseRequest([ 'schools', 's2', 'classes', 'c1', 'students' ]);\n    request.type = ApiRequestType.Create;\n    request.body = {\n        id: \"s8\",\n        fullName: \"Adam Test\",\n        email: \"adam.test@gmail.com\"\n    };\n    const query = api.buildQuery(request);\n\n    t.equal(query.steps.length, 8, 'should build a 8 step query');\n    t.ok(query.steps[0] instanceof builder.SetBodyQueryStep, 'SET BODY');\n    t.ok(query.steps[1] instanceof builder.ExtendContextQueryStep, 'EXTEND');\n    t.ok(query.steps[2] instanceof builder.QueryEdgeQueryStep, 'QUERY /schools');\n    t.ok(query.steps[3] instanceof builder.RelateChangeQueryStep, 'RELATE CHANGE schoolId');\n    t.ok(query.steps[4] instanceof builder.ExtendContextQueryStep, 'EXTEND');\n    t.ok(query.steps[5] instanceof builder.QueryEdgeQueryStep, 'QUERY /classes');\n    t.ok(query.steps[6] instanceof builder.RelateChangeQueryStep, 'RELATE CHANGE classId');\n    t.ok(query.steps[7] instanceof builder.QueryEdgeQueryStep, 'QUERY /students');\n\n    query.execute()\n        .then(resp => {\n            t.same(resp.data, {\n                id: \"s8\",\n                fullName: \"Adam Test\",\n                email: \"adam.test@gmail.com\",\n                schoolId: \"s2\",\n                classId: \"c1\"\n            });\n            t.equal(resp.metadata, null);\n            t.end()\n        })\n        .catch(() => {\n            t.ok(false, \"a valid query should not fail\");\n            t.end()\n        });\n});"]}