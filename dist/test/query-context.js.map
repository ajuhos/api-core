{"version":3,"file":"query-context.js","sourceRoot":"","sources":["../../test/query-context.ts"],"names":[],"mappings":"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","sourcesContent":["import {ApiEdgeQueryContext} from \"../src/edge/ApiEdgeQueryContext\";\nimport {ApiEdgeQueryFilterType, ApiEdgeQueryFilter} from \"../src/edge/ApiEdgeQueryFilter\";\nconst tap = require('tap');\n\ntap.test('constructing with id should work', (t: any) => {\n    let context = new ApiEdgeQueryContext('test');\n    t.equal(context.id, 'test');\n    t.end()\n});\n\ntap.test('adding fields should work', (t: any) => {\n    let context = new ApiEdgeQueryContext();\n    context.field('test');\n    t.same(context.fields, [ 'test' ]);\n    context.field('test2');\n    t.same(context.fields, [ 'test', 'test2' ]);\n    t.end()\n});\n\n//TODO: Rewrite test with populatedRelations.\n/*tap.test('adding populated fields should work', (t: any) => {\n    let context = new ApiEdgeQueryContext();\n    context.populate('test');\n    t.same(context.populatedFields, [ 'test' ]);\n    context.populate('test2');\n    t.same(context.populatedFields, [ 'test', 'test2' ]);\n    t.end()\n});*/\n\ntap.test('pagination should work', (t: any) => {\n    let context = new ApiEdgeQueryContext();\n    t.notOk(context.pagination);\n    context.paginate(10, 20);\n    t.equal(JSON.stringify(context.pagination), JSON.stringify({ skip: 10, limit: 20 }));\n    t.end()\n});\n\ntap.test('sorting should work', (t: any) => {\n    let context = new ApiEdgeQueryContext();\n    context.sort('test', true);\n    t.same(context.sortBy, [ [ 'test', 1 ] ]);\n    context.sort('test2', false);\n    t.same(context.sortBy, [ [ 'test', 1 ], [ 'test2', -1 ] ]);\n    t.end()\n});\n\ntap.test('adding filters should work', (t: any) => {\n    let context = new ApiEdgeQueryContext();\n\n    context.filter('test', ApiEdgeQueryFilterType.Equals, 10);\n    t.equal(JSON.stringify(context.filters), JSON.stringify([ new ApiEdgeQueryFilter('test', ApiEdgeQueryFilterType.Equals, 10) ]));\n    context.filter('test2', ApiEdgeQueryFilterType.Equals, '20');\n    t.equal(JSON.stringify(context.filters), JSON.stringify([\n        new ApiEdgeQueryFilter('test', ApiEdgeQueryFilterType.Equals, 10),\n        new ApiEdgeQueryFilter('test2', ApiEdgeQueryFilterType.Equals, '20')\n    ]));\n    context.filters = [];\n\n    context.filter('test', ApiEdgeQueryFilterType.NotEquals, 10);\n    t.equal(JSON.stringify(context.filters), JSON.stringify([ new ApiEdgeQueryFilter('test', ApiEdgeQueryFilterType.NotEquals, 10) ]));\n    context.filters = [];\n\n    context.filter('test', ApiEdgeQueryFilterType.GreaterThan, 10);\n    t.equal(JSON.stringify(context.filters), JSON.stringify([ new ApiEdgeQueryFilter('test', ApiEdgeQueryFilterType.GreaterThan, 10) ]));\n    context.filters = [];\n\n    context.filter('test', ApiEdgeQueryFilterType.LowerThan, 10);\n    t.equal(JSON.stringify(context.filters), JSON.stringify([ new ApiEdgeQueryFilter('test', ApiEdgeQueryFilterType.LowerThan, 10) ]));\n    context.filters = [];\n\n    context.filter('test', ApiEdgeQueryFilterType.GreaterThanOrEquals, 10);\n    t.equal(JSON.stringify(context.filters), JSON.stringify([ new ApiEdgeQueryFilter('test', ApiEdgeQueryFilterType.GreaterThanOrEquals, 10) ]));\n    context.filters = [];\n\n    context.filter('test', ApiEdgeQueryFilterType.LowerThanOrEquals, 10);\n    t.equal(JSON.stringify(context.filters), JSON.stringify([ new ApiEdgeQueryFilter('test', ApiEdgeQueryFilterType.LowerThanOrEquals, 10) ]));\n    context.filters = [];\n\n    t.end()\n});\n\ntap.test('cloning should work', (t: any) => {\n    let context = new ApiEdgeQueryContext('test');\n    context.sort('test', true);\n    context.filter('test', ApiEdgeQueryFilterType.NotEquals, 10);\n    context.paginate(10, 20);\n    context.field('test');\n\n    let clonedContext = context.clone();\n    t.equal(JSON.stringify(clonedContext), JSON.stringify(context));\n\n    t.end()\n});"]}