{"version":3,"file":"ModelEdge.js","sourceRoot":"","sources":["../../../../test/env/edges/ModelEdge.ts"],"names":[],"mappings":"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","sourcesContent":["import {ApiEdge} from \"../../../src/edge/ApiEdgeDefinition\";\nimport {ApiEdgeQueryFilter, ApiEdgeQueryFilterType} from \"../../../src/edge/ApiEdgeQueryFilter\";\nimport {ApiEdgeQueryContext} from \"../../../src/edge/ApiEdgeQueryContext\";\nimport {ApiEdgeQueryResponse} from \"../../../src/edge/ApiEdgeQueryResponse\";\nimport {ApiEdgeError} from \"../../../src/query/ApiEdgeError\";\n\nexport class Model {\n    id: string;\n\n    constructor(obj: any) {\n        this.id = obj.id;\n    }\n}\n\nexport class ModelEdge<ModelType extends Model> extends ApiEdge {\n\n    name = \"entry\";\n    pluralName = \"entries\";\n    idField = \"id\";\n    fields = []; //TODO\n\n    provider: ModelType[] = [];\n    protected createModel: (obj: any) => ModelType;\n\n    methods = [];\n    relations = [];\n\n    inspect = () => `/${this.pluralName}`;\n\n    private applyMapping(item: any, fields: string[]): any {\n        if(!fields.length) return item;\n        let output: any = {};\n        Object.keys(item).filter(key => fields.indexOf(key) != -1).forEach(key => output[key] = item[key]);\n        return output\n    }\n\n    private static applyFilter(item: any, filter: ApiEdgeQueryFilter): boolean {\n        switch(filter.type) {\n            case ApiEdgeQueryFilterType.Equals:\n                return item[filter.field] === filter.value;\n            case ApiEdgeQueryFilterType.NotEquals:\n                return item[filter.field] !== filter.value;\n            case ApiEdgeQueryFilterType.GreaterThan:\n                return item[filter.field] > filter.value;\n            case ApiEdgeQueryFilterType.GreaterThanOrEquals:\n                return item[filter.field] >= filter.value;\n            case ApiEdgeQueryFilterType.LowerThan:\n                return item[filter.field] < filter.value;\n            case ApiEdgeQueryFilterType.LowerThanOrEquals:\n                return item[filter.field] <= filter.value;\n            default:\n                return false;\n        }\n    }\n\n    private applyFilters(item: any, filters: ApiEdgeQueryFilter[]): boolean {\n        if(!filters.length) return true;\n        return filters.every(filter => ModelEdge.applyFilter(item, filter))\n    }\n\n    getEntry = (context: ApiEdgeQueryContext): Promise<ApiEdgeQueryResponse> => {\n        return new Promise<ApiEdgeQueryResponse>((resolve, reject) => {\n            let entry = this.provider.find((s: any) => s.id === context.id && this.applyFilters(s, context.filters));\n            if(entry) resolve(new ApiEdgeQueryResponse(this.applyMapping(entry, context.fields)));\n            else reject(new ApiEdgeError(404, \"Not Found\"));\n        })\n    };\n\n    listEntries = (context: ApiEdgeQueryContext): Promise<ApiEdgeQueryResponse> => {\n        return new Promise<ApiEdgeQueryResponse>((resolve) => {\n            resolve(new ApiEdgeQueryResponse(\n                this.provider\n                    .filter(item => this.applyFilters(item, context.filters))\n                    .map(entry => this.applyMapping(entry, context.fields))))\n        })\n    };\n\n    createEntry = (context: ApiEdgeQueryContext, body: any): Promise<ApiEdgeQueryResponse> => {\n        return new Promise<ApiEdgeQueryResponse>((resolve) => {\n            let entry = this.createModel(body);\n            this.provider.push(entry);\n            resolve(new ApiEdgeQueryResponse(this.applyMapping(entry, context.fields)))\n        })\n    };\n\n    updateEntry = (context: ApiEdgeQueryContext, body: any): Promise<ApiEdgeQueryResponse> => {\n        return new Promise<ApiEdgeQueryResponse>((resolve, reject) => {\n            this.getEntry(context).then(() => {\n                body.id = context.id;\n                resolve(new ApiEdgeQueryResponse(this.applyMapping(body, context.fields)))\n            }).catch(reject)\n        })\n    };\n\n    patchEntry = (context: ApiEdgeQueryContext, body: any): Promise<ApiEdgeQueryResponse> => {\n        return new Promise<ApiEdgeQueryResponse>((resolve, reject) => {\n            this.getEntry(context).then((resp: any) => {\n                let entry: any = resp.data;\n                Object.keys(body).forEach((key: any) => entry[key] = body[key]);\n                resolve(new ApiEdgeQueryResponse(this.applyMapping(entry, context.fields)))\n            }).catch(reject)\n        })\n    };\n\n    removeEntry = (context: ApiEdgeQueryContext): Promise<ApiEdgeQueryResponse> => {\n        return new Promise<ApiEdgeQueryResponse>((resolve, reject) => {\n            this.getEntry(context).then((entry : any) => {\n                this.provider.splice(this.provider.indexOf(entry), 1);\n                resolve(new ApiEdgeQueryResponse(entry))\n            }).catch(reject);\n        })\n    };\n\n    exists = (context: ApiEdgeQueryContext): Promise<ApiEdgeQueryResponse> => {\n        return new Promise<ApiEdgeQueryResponse>((resolve) => {\n            let entry = this.provider.find((s: any) => s.id === context.id);\n            if(entry) resolve(new ApiEdgeQueryResponse(true));\n            else resolve(new ApiEdgeQueryResponse(false));\n        })\n    }\n\n}\n"]}