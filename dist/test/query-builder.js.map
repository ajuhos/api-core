{"version":3,"file":"query-builder.js","sourceRoot":"","sources":["../../test/query-builder.ts"],"names":[],"mappings":"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","sourcesContent":["import {ApiEdgeError} from \"../src/query/ApiEdgeError\";\nconst tap = require('tap');\n\nimport {Api} from \"../src/Api\";\nimport * as builder from \"../src/query/ApiQueryBuilder\";\nimport {OneToOneRelation} from \"../src/relations/OneToOneRelation\";\nimport {OneToManyRelation} from \"../src/relations/OneToManyRelation\";\n\nimport {StudentEdge} from \"./env/edges/StudentEdge\";\nimport {ClassEdge} from \"./env/edges/ClassEdge\";\nimport {CourseEdge} from \"./env/edges/CourseEdge\";\nimport {CourseTypeEdge} from \"./env/edges/CourseTypeEdge\";\nimport {SchoolEdge} from \"./env/edges/SchoolEdge\";\nimport {ApiRequestType} from \"../src/request/ApiRequest\";\n\nconst studentEdge = new StudentEdge,\n    classEdge = new ClassEdge,\n    courseEdge = new CourseEdge,\n    courseTypeEdge = new CourseTypeEdge,\n    schoolEdge = new SchoolEdge;\n\nvar api: Api;\n\ntap.test('creating the API should work', (t: any) => {\n    api = new Api('1.0')\n        .edge(studentEdge)\n        .edge(classEdge)\n        .edge(courseEdge)\n        .edge(courseTypeEdge)\n        .edge(schoolEdge)\n        .relation(new OneToOneRelation(courseEdge, courseTypeEdge))\n        .relation(new OneToManyRelation(courseTypeEdge, courseEdge))\n        .relation(new OneToManyRelation(studentEdge, courseEdge))\n        .relation(new OneToOneRelation(studentEdge, classEdge))\n        .relation(new OneToOneRelation(classEdge, schoolEdge))\n        .relation(new OneToOneRelation(courseEdge, classEdge))\n        .relation(new OneToManyRelation(classEdge, studentEdge))\n        .relation(new OneToManyRelation(classEdge, courseEdge))\n        .relation(new OneToManyRelation(schoolEdge, studentEdge))\n        .relation(new OneToManyRelation(schoolEdge, classEdge));\n\n    t.end()\n});\n\ntap.test('/schools', (t: any) => {\n    const request = api.parseRequest([ 'schools' ]),\n        query = api.buildQuery(request);\n\n    t.equal(query.steps.length, 2, 'should build a 2 step query');\n    t.ok(query.steps[0] instanceof builder.ExtendContextQueryStep);\n    t.ok(query.steps[1] instanceof builder.QueryEdgeQueryStep);\n\n    query.execute()\n        .then(resp => {\n            t.same(resp.data,\n                [\n                    {\n                        address: \"16, Test street, North Pole, HA23535\",\n                        id: \"s1\",\n                        name: \"First School\",\n                        phone: \"435234523\"\n                    },\n                    {\n                        address: \"12, Test street, North Pole, HA23535\",\n                        id: \"s2\",\n                        name: \"Second School\",\n                        phone: \"456345283\"\n                    }\n                ]);\n            t.equal(resp.metadata, null);\n            t.end()\n        })\n        .catch(() => {\n            t.ok(false, \"a valid query should not fail\");\n            t.end()\n        });\n});\n\ntap.test('/schools/s2', (t: any) => {\n    const request = api.parseRequest([ 'schools', 's2' ]),\n        query = api.buildQuery(request);\n\n    t.equal(query.steps.length, 3, 'should build a 3 step query');\n    t.ok(query.steps[0] instanceof builder.ExtendContextQueryStep);\n    t.ok(query.steps[1] instanceof builder.ExtendContextQueryStep);\n    t.ok(query.steps[2] instanceof builder.QueryEdgeQueryStep);\n\n    query.execute()\n        .then(resp => {\n            t.same(resp.data,\n                {\n                    address: \"12, Test street, North Pole, HA23535\",\n                    id: \"s2\",\n                    name: \"Second School\",\n                    phone: \"456345283\"\n                });\n            t.equal(resp.metadata, null);\n            t.end()\n        })\n        .catch(() => {\n            t.ok(false, \"a valid query should not fail\");\n            t.end()\n        });\n});\n\ntap.test('/schools/s5', (t: any) => {\n    const request = api.parseRequest([ 'schools', 's5' ]),\n        query = api.buildQuery(request);\n\n    query.execute()\n        .then(() => {\n            t.ok(false, \"an invalid query should not succeed\");\n            t.end()\n        })\n        .catch(e => {\n            t.ok(e instanceof ApiEdgeError);\n            t.equal(e.status, 404);\n            t.equal(e.message, 'Not Found');\n            t.end()\n        });\n});\n\ntap.test('/schools/s1/classes', (t: any) => {\n    const request = api.parseRequest([ 'schools', 's1', 'classes' ]),\n        query = api.buildQuery(request);\n\n    t.equal(query.steps.length, 5, 'should build a 5 step query');\n    t.ok(query.steps[0] instanceof builder.ExtendContextQueryStep, 'EXTEND');\n    t.ok(query.steps[1] instanceof builder.QueryEdgeQueryStep, 'QUERY /schools');\n    t.ok(query.steps[2] instanceof builder.RelateQueryStep, 'RELATE schoolId');\n    t.ok(query.steps[3] instanceof builder.ExtendContextQueryStep, 'APPLY PARAMS');\n    t.ok(query.steps[4] instanceof builder.QueryEdgeQueryStep, 'QUERY /classes');\n\n    query.execute()\n        .then(resp => {\n            t.same(resp.data,\n                [\n                    {\n                        id: \"c1\",\n                        name: \"A\",\n                        semester: 1,\n                        room: \"Room 1\",\n                        schoolId: \"s1\"\n                    }\n                ]);\n            t.equal(resp.metadata, null);\n            t.end()\n        })\n        .catch(() => {\n            t.ok(false, \"a valid query should not fail\");\n            t.end()\n        });\n});\n\ntap.test('/schools/s1/classes/c1', (t: any) => {\n    const request = api.parseRequest([ 'schools', 's1', 'classes', 'c1' ]),\n        query = api.buildQuery(request);\n\n    t.equal(query.steps.length, 6, 'should build a 6 step query');\n    t.ok(query.steps[0] instanceof builder.ExtendContextQueryStep, 'EXTEND');\n    t.ok(query.steps[1] instanceof builder.QueryEdgeQueryStep, 'QUERY /schools');\n    t.ok(query.steps[2] instanceof builder.RelateQueryStep, 'RELATE schoolId');\n    t.ok(query.steps[3] instanceof builder.ExtendContextQueryStep, 'EXTEND');\n    t.ok(query.steps[4] instanceof builder.ExtendContextQueryStep, 'APPLY PARAMS');\n    t.ok(query.steps[5] instanceof builder.QueryEdgeQueryStep, 'QUERY /classes');\n\n    query.execute()\n        .then(resp => {\n            t.same(resp.data,\n                {\n                    id: \"c1\",\n                    name: \"A\",\n                    semester: 1,\n                    room: \"Room 1\",\n                    schoolId: \"s1\"\n                });\n            t.equal(resp.metadata, null);\n            t.end()\n        })\n        .catch(() => {\n            t.ok(false, \"a valid query should not fail\");\n            t.end()\n        });\n});\n\ntap.test('/students/s2/class', (t: any) => {\n    const request = api.parseRequest([ 'students', 's2', 'class' ]),\n        query = api.buildQuery(request);\n\n    t.equal(query.steps.length, 5, 'should build a 5 step query');\n    t.ok(query.steps[0] instanceof builder.ExtendContextQueryStep, 'EXTEND');\n    t.ok(query.steps[1] instanceof builder.QueryEdgeQueryStep, 'QUERY /students');\n    t.ok(query.steps[2] instanceof builder.ProvideIdQueryStep, 'PROVIDE ID: classId');\n    t.ok(query.steps[3] instanceof builder.ExtendContextQueryStep, 'APPLY PARAMS');\n    t.ok(query.steps[4] instanceof builder.QueryEdgeQueryStep, 'QUERY /classes');\n\n    query.execute()\n        .then(resp => {\n            t.same(resp.data, {\n                id: \"c1\",\n                name: \"A\",\n                semester: 1,\n                room: \"Room 1\",\n                schoolId: \"s1\"\n            });\n            t.equal(resp.metadata, null);\n            t.end()\n        })\n        .catch(() => {\n            t.ok(false, \"a valid query should not fail\");\n            t.end()\n        });\n});\n\ntap.test('/schools/s1/classes/c2', (t: any) => {\n    const request = api.parseRequest([ 'schools', 's1', 'classes', 'c2' ]),\n        query = api.buildQuery(request);\n\n    query.execute()\n        .then(() => {\n            t.ok(false, \"an invalid query should not succeed\");\n            t.end()\n        })\n        .catch(e => {\n            t.ok(e instanceof ApiEdgeError);\n            t.equal(e.status, 404);\n            t.equal(e.message, 'Not Found');\n            t.end()\n        });\n});\n\ntap.test('POST /schools', (t: any) => {\n    const request = api.parseRequest([ 'schools' ]);\n    request.type = ApiRequestType.Create;\n    const body = request.body = {\n        address: \"12, Test street, North Pole, HA23535\",\n        id: \"s3\",\n        name: \"Third School\",\n        phone: \"456345283\"\n    };\n    const query = api.buildQuery(request);\n\n    t.equal(query.steps.length, 2, 'should build a 2 step query');\n    t.ok(query.steps[0] instanceof builder.SetBodyQueryStep);\n    t.ok(query.steps[1] instanceof builder.QueryEdgeQueryStep);\n\n    query.execute()\n        .then(resp => {\n            t.same(resp.data, body);\n            t.equal(resp.metadata, null);\n            t.end()\n        })\n        .catch(() => {\n            t.ok(false, \"a valid query should not fail\");\n            t.end()\n        });\n});\n\ntap.test('DELETE /schools/s3', (t: any) => {\n    const request = api.parseRequest([ 'schools', 's3' ]);\n    request.type = ApiRequestType.Delete;\n    const query = api.buildQuery(request);\n\n    t.equal(query.steps.length, 3, 'should build a 3 step query');\n    t.ok(query.steps[0] instanceof builder.ExtendContextQueryStep);\n    t.ok(query.steps[1] instanceof builder.ExtendContextQueryStep);\n    t.ok(query.steps[2] instanceof builder.QueryEdgeQueryStep);\n\n    query.execute()\n        .then(resp => {\n            t.equal(resp.metadata, null);\n            t.end()\n        })\n        .catch(() => {\n            t.ok(false, \"a valid query should not fail\");\n            t.end()\n        });\n});\n\ntap.test('DELETE /students/s2/class', (t: any) => {\n    const request = api.parseRequest([ 'students', 's2', 'class' ]);\n    request.type = ApiRequestType.Delete;\n\n    try {\n        api.buildQuery(request);\n        t.ok(false, \"an invalid query should not succeed\");\n        t.end()\n    }\n    catch(e) {\n        t.ok(e instanceof ApiEdgeError);\n        t.equal(e.status, 400);\n        t.equal(e.message, 'Invalid Delete Query');\n        t.end()\n    }\n});\n\ntap.test('PATCH /schools/s2', (t: any) => {\n    const request = api.parseRequest([ 'schools', 's2' ]);\n    request.type = ApiRequestType.Patch;\n    request.body = {\n        name: \"Cool School\"\n    };\n    const query = api.buildQuery(request);\n\n    t.equal(query.steps.length, 4, 'should build a 4 step query');\n    t.ok(query.steps[0] instanceof builder.ExtendContextQueryStep, 'EXTEND');\n    t.ok(query.steps[1] instanceof builder.ExtendContextQueryStep, 'APPLY PARAMS');\n    t.ok(query.steps[2] instanceof builder.SetBodyQueryStep, 'SET BODY');\n    t.ok(query.steps[3] instanceof builder.QueryEdgeQueryStep, 'QUERY');\n\n    query.execute()\n        .then(resp => {\n            t.same(resp.data,\n                {\n                    address: \"12, Test street, North Pole, HA23535\",\n                    id: \"s2\",\n                    name: \"Cool School\",\n                    phone: \"456345283\"\n                });\n            t.equal(resp.metadata, null);\n            t.end()\n        })\n        .catch(() => {\n            t.ok(false, \"a valid query should not fail\");\n            t.end()\n        });\n});\n\ntap.test('PUT /schools/s2', (t: any) => {\n    const request = api.parseRequest([ 'schools', 's2' ]);\n    request.type = ApiRequestType.Update;\n    request.body = {\n        name: \"Cool School\"\n    };\n    const query = api.buildQuery(request);\n\n    t.equal(query.steps.length, 4, 'should build a 4 step query');\n    t.ok(query.steps[0] instanceof builder.ExtendContextQueryStep, 'EXTEND');\n    t.ok(query.steps[1] instanceof builder.ExtendContextQueryStep, 'APPLY PARAMS');\n    t.ok(query.steps[2] instanceof builder.SetBodyQueryStep, 'SET BODY');\n    t.ok(query.steps[3] instanceof builder.QueryEdgeQueryStep, 'QUERY');\n\n    query.execute()\n        .then(resp => {\n            t.same(resp.data,\n                {\n                    id: \"s2\",\n                    name: \"Cool School\"\n                });\n            t.equal(resp.metadata, null);\n            t.end()\n        })\n        .catch(() => {\n            t.ok(false, \"a valid query should not fail\");\n            t.end()\n        });\n});"]}